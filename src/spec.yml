openapi: 3.0.1
info:
  title: Delilah Resto - MyFirstAPI-
  description: priemera API de un Resto
  version: 0.1.9
servers:
  - url: http://localhost:9080/api/v1
    description: Optional server description, e.g. Main (production) server

#para realizar las pruebas de autenticacion se utilizo la funcion btoa() :
#------para realizar las pruebas--------------
#token= 'bWFyaTozMjE='del cliente: mari psw: 321 
#token= 'am9oYToxMjM=' del admin: joha psw: 123
#numero de pedido : 789

paths:
    /usuario/login:
      post:
        parameters:
            - name: token
              in: header
              description: token to be passed as a header
              required: true
              schema:
                type: string
              example: 'bWFyaTozMjE='
        description: token with  'name:password' for identification
        summary: endpoint to login a user
        responses:
                "200": # status code
                  description: its OK , successful login 
                  content:
                    application/json:
                      schema:
                        type: array
                "404":
                  description: Error, unsuccessful login
                  content:
                    application/json:
                      schema:
                        type: array
    /usuario/registro:  
       post:       
        summary: endpoint to register a new user
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type:  object
                properties:
                  username:
                    type: string
                    description: user nick-name 
                  psw:
                    type: string
                    description: include numbers too
                  psw2:
                    type: string  
                    description: include numbers too
                  name:
                    type: string    
                    description: real user name
                  lastName:
                    type: string   
                  email:
                    type: string  
                  adress:
                    type: string
                  cel:
                    type: number
        description:  data entry to register a new user
        responses:
                "200": # status code
                  description: its OK , successful registration in arrayUsers
                  content:
                    application/json:
                      schema:
                        type: array
                "404":
                  description: Error , unsuccessful registration in arrayUsers
                  content:
                    application/json:
                      schema:
                        type: array
    /Productos/mostrar:  
       get: 
        parameters:
            - name: token
              in: header
              description: token to be passed as a header
              required: true
              schema:
                type: string
              example: 'bWFyaTozMjE='
        description:  shows all products available to order
        summary: endpoint to show all the available products
        responses:
                "200":
                  description: its OK 
                  content:
                    application/json:
                      schema:
                        type: array
                "406":
                  description: Error , no existe el array de productos
                  content:
                    application/json:
                      schema:
                        type: array
                "401":
                  description: Error , unauthorized user
                  content:
                    application/json:
                      schema:
                        type: array
    /Productos/alta:
      post: 
        parameters:
            - name: token
              in: header
              description: token to be passed as a header
              required: true
              schema:
                type: string
              example: 'am9oYToxMjM='
        description:  the administrative user register a new product
        summary: endpoint to register a new product
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type:  object
                properties:          
                  name:
                    type: string    
                    description: real user name
                  description:
                    type: string 
                    description: description of the product to register  
                  stock:
                    type: number
                  precio:
                    type: number
        responses:
                "200":
                  description: its OK , successfully registered product 
                  content:
                    application/json:
                      schema:
                        type: array
                "406":
                  description: Error , can't register the product
                  content:
                    application/json:
                      schema:
                        type: array
    /Productos/modificar_nombre:
        put: 
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'am9oYToxMjM='
          description:  the administrator modifies a product based on a name
          summary: endpoint modifies a product based on a name
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type:  object
                  properties:          
                    name:
                      type: string    
                      description:  current name of the product to modify
                    newName:
                      type: string 
                      description: name by which you are going to rename the selected product 
                    description:
                      type: string
                    precio:
                      type: number
                    stock:
                      type: number
          responses:
                  "200":
                    description: its OK , successfully modify product 
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, the change could not be made, the name entered does not exist in the database
                    content:
                      application/json:
                        schema:
                          type: array
                  "406":
                    description: Error, the change could not be made
                    content:
                      application/json:
                        schema:
                          type: array
    /Productos/modificar:
      put: 
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'am9oYToxMjM='
          description:  the administrator can modify any value of the selected product by the name
          summary: endpoint modifies any value of the selected product 
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type:  object
                  properties:          
                    name:
                      type: string    
                      description:  ncurrent name of the product to modify
                    newName:
                      type: string 
                      description: name by which you are going to rename the selected product 
                    description:
                      type: string
                    stock:
                      type: number
                    precio:
                      type: number
          responses:
                  "200":
                    description: its OK , successfully modify product 
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, the change could not be made, product is not found
                    content:
                      application/json:
                        schema:
                          type: array
    /Productos/baja:
      delete: 
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'am9oYToxMjM='
          description:  the administrator can remove a product selected
          summary: endpoint to remove a product
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type:  object
                  properties:   
                    id:
                      type: string    
                      description:  product id      
                    name:
                      type: string    
                      description:   product name
                    description:
                      type: string
                    stock:
                      type: number
                    precio:
                      type: number
          responses:
                  "200":
                    description: its OK , successfully remove product 
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, the product could not be removed, product is not found
                    content:
                      application/json:
                        schema:
                          type: array
    /Pedido/crear: #no anda :/
      post:
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'bWFyaTozMjE='
          description:  the customer requests a new order based on a list to products
          summary: endpoint to create a new order
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: array
                  items:
                    type: object
                  properties:   
                     name:
                       type: string    
                       description:  current name of the product to order
                     description:
                       type: string
                     precioU:
                       type: number
                       description: price b y unit
                     cantidad:
                       type: number
                       description: quantity of selected product
                  example:

          responses:
                  "200":
                    description: its OK , successfully create a new order 
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, the new order could not be created
                    content:
                      application/json:
                        schema:
                          type: array
    /Pedido/confirmar:
      post:
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'bWFyaTozMjE='
          description:  the customer confirm a order 
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:   
                     pedidoId:
                       type: string    
                     direcc:
                       type: string                            
                     modoPago:
                       type: string                          
          responses:
                  "200":
                    description: its OK , successfully confirm a new order 
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, 
                    content:
                      application/json:
                        schema:
                          type: array
    /Pedido/modificar:
      put:
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'bWFyaTozMjE='
          description:  the customer can add a product to his order
          summary: endpoint to add a product to the order
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type:  object
                  properties:          
                    pedidoId:
                      type: number    
                    name:
                      type: string 
                      description: the selected product name
                    description:
                      type: string
                    precioU:
                      type: number
                    cantidad:
                      type: number
          responses:
                  "200":
                    description: its OK , successfully add 
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, the change could not be made, product is not found
                    content:
                      application/json:
                        schema:
                          type: array
        

    /Pedido/historial: 
      post:
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'bWFyaTozMjE='
          description:  the client requests the history of orders placed
          summary: endpoint to show all the order made by customer
          responses:
                  "200":
                    description: its OK , show list  
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, Could not find registered orders for who is requesting it
                    content:
                      application/json:
                        schema:
                          type: array
    /Pedido/Admin/historial:
      post:
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'am9oYToxMjM='
          description:  admin can see all existing orders
          summary: endpoint to show all the orders
          responses:
                  "200":
                    description: its OK , show list  
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, Could not find registered orders 
                    content:
                      application/json:
                        schema:
                          type: array
    /Pedido/Admin/cambioEstado:
      put:
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'am9oYToxMjM='
          description:  the administrator selects an order and modifies its status   #para probar usar id 789
          summary: endpoint to to modify the order status
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:   
                    pedidoId:
                      type: number     #para probar usar id 789
                      description: identifier of the selected order
                    estado:  
                      type: string
                      description: status of the order
          responses:
                  "200":
                    description: its OK ,the change of state was made
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, status change could not be performed
                    content:
                      application/json:
                        schema:
                          type: array
    /Pedido/Admin/cambioStock:
      put:
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'am9oYToxMjM='
          description:  the administrator selects an order and modifies its stock of products selected;the units to be added or removed from the selected order must be entered."-1 to remove a unit of the product or 1 to add a unit of the product to the order". 
          summary: endpoint to to modify  the quantity of products selected in an order
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:   
                    pedidoId:
                      type: number     #para probar usar id 789
                      description: identifier of the selected order
                    name:  
                      type: string
                      description: name of the selected product
                    cantidad:  
                      type: number
                      description: the quantity of products selected in an order
          responses:
                  "200":
                    description: its OK ,the change was made
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, status change could not be performed
                    content:
                      application/json:
                        schema:
                          type: array
    /Pedido/Admin/MedioPago:
      put:
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'am9oYToxMjM='
          description:  the administrator enters a new payment method
          summary: endpoint to enters a new payment method
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:   
                    medioPago:
                      type: string     
                      description: a new payment method
          responses:
                  "200":
                    description: its OK ,the UpDate was made
                    content:
                      application/json:
                        schema:
                          type: array
                  "406":
                    description: Error, change could not be performed, the payment method is already registered
                    content:
                      application/json:
                        schema:
                          type: array
      delete:
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'am9oYToxMjM='
          description:  the administrator deletes a payment method entered by the body  
          summary: endpoint to delete a payment method 
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:   
                    medioPago:
                      type: string     
                      description:  a  payment method
          responses:
                  "200":
                    description: its OK ,the method has been removed
                    content:
                      application/json:
                        schema:
                          type: array
                  "406":
                    description: Error, the payment method you are trying to delete is not registered
                    content:
                      application/json:
                        schema:
                          type: array
      get:
            parameters:
                - name: token
                  in: header
                  description: token to be passed as a header
                  required: true
                  schema:
                    type: string
                  example: 'am9oYToxMjM='
            description:  the administrator deletes a payment method entered by the body  
            summary:  endpoint to  show payment methods
            responses:
                    "200":
                      description: its OK ,list of payment method 
                      content:
                        application/json:
                          schema:
                            type: array
                    "406":
                      description: Error, the payment method you are trying to delete is not registered
                      content:
                        application/json:
                          schema:
                            type: array
    /Pedido/Admin/bajaPedido:
      delete:
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'am9oYToxMjM='
          description:  the administrator deletes a order by entering the order id by the body
          summary: endpoint to delete a  selected order
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:   
                    pedidoId:
                      type: number   
                      description:  pedido id
                  example: 789
          responses:
                  "200":
                    description: its OK ,the order was removed from the list
                    content:
                      application/json:
                        schema:
                          type: array
                  "406":
                    description: Error, the order you are trying to delete is not registered
                    content:
                      application/json:
                        schema:
                          type: array
    /Pedido/borrarProducto:
      delete:
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
                example: 'bWFyaTozMjE='
          description:  customer deletes a product from a selected order that does not have a "cerrado" status
          summary: endpoint to remove a product from a selected order
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:   
                    pedidoId:
                      type: number   
                      description:  pedido id
                    productoName:
                      type: string 
                      description:  product name
          responses:
                  "200":
                    description: its OK ,the product was removed from the order
                    content:
                      application/json:
                        schema:
                          type: array
                  "406":
                    description: Error, the product you are trying to delete is not registered. The change could not be made
                    content:
                      application/json:
                        schema:
                          type: array

              

    
            