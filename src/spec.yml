openapi: 3.0.1
info:
  title: Delailah Resto - MyFirstAPI-
  description: priemera API de un Resto
  version: 0.1.9
servers:
  - url: http://localhost:9080/api/v1
    description: Optional server description, e.g. Main (production) server

paths:
    /usuario/login:
      post:
        parameters:
            - name: token
              in: header
              description: token to be passed as a header
              required: true
              schema:
                type: string
        description: token with  'name:password' for identification
        summary: endpoint to login a user
        responses:
                "200": # status code
                  description: its OK , successful login 
                  content:
                    application/json:
                      schema:
                        type: array
                "404":
                  description: Error, unsuccessful login
                  content:
                    application/json:
                      schema:
                        type: array
    /usuario/registro:  
       post:       
        summary: endpoint to register a new user
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type:  object
                properties:
                  username:
                    type: string
                    description: user nick-name 
                  psw:
                    type: string
                    description: include numbers too
                  psw2:
                    type: string  
                    description: include numbers too
                  name:
                    type: string    
                    description: real user name
                  lastName:
                    type: string   
                  email:
                    type: string  
                  adress:
                    type: string
                  cel:
                    type: number
        description:  data entry to register a new user
        responses:
                "200": # status code
                  description: its OK , successful registration in arrayUsers
                  content:
                    application/json:
                      schema:
                        type: array
                "404":
                  description: Error , unsuccessful registration in arrayUsers
                  content:
                    application/json:
                      schema:
                        type: array
    /Productos/mostrar:  
       get: 
        parameters:
            - name: token
              in: header
              description: token to be passed as a header
              required: true
              schema:
                type: string
        description:  shows all products available to order
        summary: endpoint to show all the available products
        responses:
                "200":
                  description: its OK 
                  content:
                    application/json:
                      schema:
                        type: array
                "406":
                  description: Error , no existe el array de productos
                  content:
                    application/json:
                      schema:
                        type: array
                "401":
                  description: Error , unauthorized user
                  content:
                    application/json:
                      schema:
                        type: array
    /Productos/alta:
      post: 
        parameters:
            - name: token
              in: header
              description: token to be passed as a header
              required: true
              schema:
                type: string
        description:  the administrative user register a new product
        summary: endpoint to register a new product
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type:  object
                properties:          
                  name:
                    type: string    
                    description: real user name
                  description:
                    type: string 
                    description: description of the product to register  
                  stock:
                    type: number
                  precio:
                    type: number
        responses:
                "200":
                  description: its OK , successfully registered product 
                  content:
                    application/json:
                      schema:
                        type: array
                "406":
                  description: Error , can't register the product
                  content:
                    application/json:
                      schema:
                        type: array
    /Productos/modificar_nombre:
        put: 
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
          description:  the administrator modifies a product based on a name
          summary: endpoint modifies a product based on a name
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type:  object
                  properties:          
                    name:
                      type: string    
                      description:  current name of the product to modify
                    newName:
                      type: string 
                      description: name by which you are going to rename the selected product 
                    description:
                      type: string
                    precio:
                      type: number
                    stock:
                      type: number
          responses:
                  "200":
                    description: its OK , successfully modify product 
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, the change could not be made, the name entered does not exist in the database
                    content:
                      application/json:
                        schema:
                          type: array
                  "406":
                    description: Error, the change could not be made
                    content:
                      application/json:
                        schema:
                          type: array
    /Productos/modificar:
      put: 
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
          description:  the administrator can modify any value of the selected product by the name
          summary: endpoint modifies any value of the selected product 
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type:  object
                  properties:          
                    name:
                      type: string    
                      description:  ncurrent name of the product to modify
                    newName:
                      type: string 
                      description: name by which you are going to rename the selected product 
                    description:
                      type: string
                    stock:
                      type: number
                    precio:
                      type: number
          responses:
                  "200":
                    description: its OK , successfully modify product 
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, the change could not be made, product is not found
                    content:
                      application/json:
                        schema:
                          type: array
    /Productos/baja:
      delete: 
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
          description:  the administrator can remove a product selected
          summary: endpoint to remove a product
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type:  object
                  properties:   
                    id:
                      type: string    
                      description:  product id      
                    name:
                      type: string    
                      description:   product name
                    description:
                      type: string
                    stock:
                      type: number
                    precio:
                      type: number
          responses:
                  "200":
                    description: its OK , successfully remove product 
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, the product could not be removed, product is not found
                    content:
                      application/json:
                        schema:
                          type: array
    /Pedido/:
      post:
          parameters:
              - name: token
                in: header
                description: token to be passed as a header
                required: true
                schema:
                  type: string
          description:  the customer requests a new order based on a list to products
          summary: endpoint to create a new order
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:          
                    name:
                      type: string    
                      description:  current name of the product to order
                    description:
                      type: string
                    precioU:
                      type: number
                    cantidad:
                      type: number
          responses:
                  "200":
                    description: its OK , successfully create a new order 
                    content:
                      application/json:
                        schema:
                          type: array
                  "404":
                    description: Error, the new order could not be created
                    content:
                      application/json:
                        schema:
                          type: array


            